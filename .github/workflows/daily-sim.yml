name: Daily Sim (Autopilot)

on:
  workflow_dispatch: {}
  schedule:
    # Run every 30 minutes during US market hours in UTC (13:30-20:00 UTC roughly)
    - cron: '*/30 13-21 * * 1-5'

permissions:
  contents: write

concurrency:
  group: sim-artifacts
  cancel-in-progress: false

jobs:
  run:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install package
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .

      - name: Prep dirs
        run: |
          mkdir -p artifacts artifacts/trades

      - name: Run autopilot (predict -> rebalance)
        run: |
          FETCH_SLEEP_S=0.05 python -m src.runner_daily --autopilot --use-picks --market-hours-only --max-symbols 500 --profile balanced --fee-rate 0.0005 --slippage-bps 3 --min-trade-cash-pct 0.002

      - name: Bootstrap equity if missing
        run: |
          if [ ! -f artifacts/equity.jsonl ]; then
            date_u=$(date -u +%Y-%m-%dT%H:%M:%SZ)
            echo "{\"ts\":\"$date_u\",\"equity\":10000}" > artifacts/equity.jsonl
          fi

      - name: Render equity chart
        run: |
          python -m pip install matplotlib || true
          python -m src.tools.plot_equity || true

      - name: Commit state/equity/trades and latest picks
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -e
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          # add files if they exist
          git add -f artifacts/state/portfolio.json 2>/dev/null || true
          git add -f artifacts/equity.jsonl 2>/dev/null || true
          git add -f artifacts/trades/trades.jsonl 2>/dev/null || true
          git add -f artifacts/decisions.jsonl 2>/dev/null || true
          # add most recent picks file if new
          latest_picks=$(ls -1t artifacts/picks/*.csv 2>/dev/null | head -n 1 || true)
          if [ -n "$latest_picks" ]; then
            git add -f "$latest_picks"
          fi
          # add chart if present
          if [ -f artifacts/equity.png ]; then
            git add -f artifacts/equity.png
          fi
          # cache-bust README image links by appending a short token
          SHA=$(git rev-parse --short HEAD || date +%s)
          perl -0777 -pe "s|(artifacts/equity.png)(\?v=[0-9a-f]+)?|\1?v=${SHA}|g; s|(artifacts_gemini/equity.png)(\?v=[0-9a-f]+)?|\1?v=${SHA}|g" -i README.md || true
          git add README.md || true
          if git diff --cached --quiet; then
            echo "No changes to commit."
            exit 0
          fi
          git commit -m "chore(sim): update state/equity/trades/decisions [skip ci]"
          # rebase to avoid push rejects when other workflow updated main
          git fetch origin
          git pull --rebase --autostash origin main || true
          git push